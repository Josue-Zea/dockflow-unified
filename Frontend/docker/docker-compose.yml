# version: "3.8"
# services:
#   nextjs:
#     image: rocket1530/frontend-dockflow
#     container_name: nextjs
#     environment:
#       - NODE_ENV=production
#     ports:
#       - "3000:3000"
#     networks:
#       - app-network

#   nginx:
#     image: nginx:stable-alpine
#     container_name: nginx
#     volumes:
#       - ./nginx.conf:/etc/nginx/conf.d/default.conf
#       - ./etc/ssl/certs:/etc/ssl/certs
#       - ./etc/ssl/private:/etc/ssl/private
#     ports:
#       - "81:81"   # Redirecci√≥n HTTP en el puerto 81
#       - "444:444" # HTTPS en el puerto 444
#     depends_on:
#       - nextjs
#     networks:
#       - app-network

# networks:
#   app-network:
#     driver: bridge



version: '3'
services:
  traefik:
    image: traefik:v2.10
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--entrypoints.web.address=:81"
      - "--entrypoints.websecure.address=:444"
      - "--certificatesresolvers.myresolver.acme.httpchallenge=true"
      - "--certificatesresolvers.myresolver.acme.httpchallenge.entrypoint=web"
      - "--certificatesresolvers.myresolver.acme.email=josue.zea@automatadg.com"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
    ports:
      - "81:81"       # Cambiado de 80 a 81
      - "444:444"     # Cambiado de 443 a 444
    volumes:
      - "./letsencrypt:/letsencrypt"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"

  frontend:
    image: rocket1530/frontend-dockflow
    container_name: frontend-dockflow
    labels:
      - "traefik.http.routers.frontend.rule=Host(`131.107.5.83`)"
      - "traefik.http.routers.frontend.entrypoints=websecure"
      - "traefik.http.routers.frontend.tls.certresolver=myresolver"
    ports:
      - "3000:3000" # Exponer el puerto del frontend